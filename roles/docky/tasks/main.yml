---
- name: Gather minimal facts
  ansible.builtin.setup:
    filter:
      - ansible_distribution
      - ansible_os_family
      - ansible_distribution_file_variety
      - inventory_hostname
  tags: setup

- name: Remove old Docker packages (RedHat)
  yum:
    name:
      - docker
      - docker-ce
      - docker-ce-cli
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine
    state: absent
  when: ansible_distribution_file_variety == "RedHat"
  tags: uninstall_docker

- name: Remove old Docker packages (Debian)
  apt:
    name:
      - docker
      - docker-doc
      - docker-compose
      - podman-docker
      - containerd
      - runc
    state: absent
  when: ansible_os_family == "Debian"
  tags: uninstall_docker

- name: Remove Docker-related directories
  file:
    path: "{{ item }}"
    state: absent
    force: true
  loop:
    - /var/lib/docker
    - /var/lib/containerd
    - /etc/docker
    - /etc/apt/keyrings/docker.gpg
    - /etc/apt/sources.list.d/docker.list
  tags: docker_remove_files

- name: Update system packages (RedHat)
  yum:
    name: "*"
    state: latest
    exclude: kernel*
  when: ansible_distribution_file_variety == "RedHat"
  tags: update_packages

- name: Install required packages (RedHat)
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: latest
  when: ansible_distribution_file_variety == "RedHat"
  tags: install_dependencies

- name: Update system packages (Debian)
  apt:
    upgrade: yes
    autoremove: yes
    cache_valid_time: 86400
  when: ansible_os_family == "Debian"
  tags: update_packages

- name: Install required packages (Debian)
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - curl
      - gnupg-agent
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
  when: ansible_os_family == "Debian"
  tags: install_dependencies

- name: Set distribution name for RedHat
  set_fact:
    mydistribution: "{{ 'rhel' if (ansible_distribution == 'Red Hat Enterprise Linux') else (ansible_distribution | lower) }}"
  when: ansible_distribution_file_variety == "RedHat"
  tags: setup

- name: Add Docker repo and GPG (Debian/Ubuntu)
  block:
    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Add GPG key
      shell: >
        curl -fsSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg |
        gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        executable: /bin/bash

    - name: Add Docker repo
      shell: >
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg]
        https://download.docker.com/linux/{{ ansible_distribution | lower }}
        $(. /etc/os-release && echo $VERSION_CODENAME) stable" |
        tee /etc/apt/sources.list.d/docker.list > /dev/null && apt update
      args:
        executable: /bin/bash
  when: ansible_os_family == "Debian"
  tags: docker_repo

- name: Add Docker GPG key and repo (RedHat)
  block:
    - rpm_key:
        key: "https://download.docker.com/linux/{{ mydistribution }}/gpg"
        state: present

    - yum_repository:
        name: docker
        description: Docker Repository
        baseurl: "https://download.docker.com/linux/{{ mydistribution }}/$releasever/$basearch/stable"
        enabled: yes
        gpgcheck: yes
        gpgkey: "https://download.docker.com/linux/{{ mydistribution }}/gpg"
  when: ansible_distribution_file_variety == "RedHat"
  tags: docker_repo

- name: Install Docker packages
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest
  tags: install_docker

- name: Install docker-compose binary manually
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  tags: docker_compose

- name: Enable and start Docker service
  service:
    name: docker
    enabled: yes
    state: started
  tags: docker_service

- name: Ensure Docker SDK for Python is installed (Debian)
  pip:
    name: docker
    state: latest
  when: ansible_os_family == "Debian"
  tags: install_pip

- name: Add ansible user to docker group
  user:
    name: ansible
    groups: docker
    append: yes
  tags: usermod

- name: Pull node exporter image
  docker_image:
    name: quay.io/prometheus/node-exporter
    source: pull
  tags: docker_image

- name: Copy Docker images to target hosts
  copy:
    src: "{{ item.file }}"
    dest: /opt/fluentd/
  loop: "{{ docker_images }}"
  when: inventory_hostname in docker_hosts
  tags: docker_image

- name: Load Docker images
  shell: "docker load -i /opt/fluentd/{{ item.file }}"
  loop: "{{ docker_images }}"
  when: inventory_hostname in docker_hosts
  tags: docker_image

- name: Check if container is exited
  shell: docker ps -q -f status=exited
  register: container_status
  changed_when: false
  failed_when: false
  tags: check_container

- name: Run monitoring containers
  script: "{{ item.script }}"
  loop: "{{ docker_scripts }}"
  when: container_status.stdout == "" and (item.condition | bool)
  tags: run_exporters

- name: Show Docker version
  script: docker_version.sh
  register: docker_version_output
  tags: docker_version

- name: Display Docker version output
  debug:
    var: docker_version_output.stdout_lines
  tags: docker_version
...
